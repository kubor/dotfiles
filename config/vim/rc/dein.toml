[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'Shougo/vimfiler'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'arcticicestudio/nord-vim'
hook_add = '''
set background=dark
colorscheme nord
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
" status line settigns
let g:lightline = {
    \ 'colorscheme': 'seoul256',
    \ 'mode_map': {'c': 'NORMAL'},
    \ 'active': {
    \   'left': [
    \       ['mode', 'paste'],
    \       ['fugitive', 'filename']
    \   ],
    \   'right': [
    \       ['syntastic', 'lineinfo'],
    \       ['percent'],
    \       ['fileformat', 'fileencoding', 'filetype']
    \   ]
    \ },
    \ 'component_expand': {
    \   'syntastic': 'SyntasticStatuslineFlag',
    \ },
    \ 'component_type': {
    \   'syntastic': 'error',
    \ },
    \ 'component_function': {
    \   'modified': 'MyModified',
    \   'readonly': 'MyReadonly',
    \   'fugitive': 'MyFugitive',
    \   'filename': 'MyFilename',
    \   'fileformat': 'MyFileformat',
    \   'filetype': 'MyFiletype',
    \   'fileencoding': 'MyFileencoding',
    \   'mode': 'MyMode',
    \ },
    \ 'separator': {'left': '', 'right': ''},
    \ 'subseparator': {'left': '|', 'right': '|'}
    \ }
'''

[[plugins]]
repo = 'Shougo/neosnippet'
depends = 'neosnippet-snippets'
hook_add = '''
" snipets settings
imap <C-k>      <Plug>(neosnippet_expand_or_jump)
smap <C-k>      <Plug>(neosnippet_expand_or_jump)
xmap <C-k>      <Plug>(neosnippet_expand_target)
imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
    \ "\<Plug>(neosnippet_expand_or_jump)": pumvisible() ?
    \ "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
    \ "\<Plug>(neosnippet_expand_or_jump)": "\<TAB>"
" For snippet_complete marker.
if has("conceal")
  set conceallevel=2 concealcursor=i
  endif
'''

[[plugins]]
repo = 'kchmck/vim-coffee-script'
on_ft = 'coffee'
on_i = 1

[[plugins]]
repo = 'vim-perl/vim-perl'
on_ft = 'perl'

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown', 'mkd']
hook_add = '''
let g:vim_markdown_folding_disabled = 1
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'thinca/vim-template'

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
hook_add = '''
let g:context_filetype#search_offset = 180
'''

[[plugins]]
repo = 'haya14busa/incsearch.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
if dein#util#_is_windows()
    let cmd = 'tools\\update-dll-mingw'
elseif dein#util#_is_cygwin()
    let cmd = 'make -f make_cygwin.mak'
elseif executable('gmake')
    let cmd = 'gmake'
else
    let cmd = 'make'
endif
    let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'scrooloose/syntastic'
hook_add = '''
" use flake8 for python lint checker
let g:syntastic_python_checkers = ['flake8', 'mypy']
'''

[[plugins]]
repo = 'roxma/nvim-yarp'
depends = 'deoplete.nvim'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
depends = 'deoplete.nvim'

[[plugins]]
repo = 'Shougo/vimshell'

[[plugins]]
repo = 'Konfekt/FastFold'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'css', 'php']

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['html', 'javascript']

[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html', 'css', 'php']

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = ['html', 'css', 'php']

[[plugins]]
repo = 'JuliaLang/julia-vim'

[[plugins]]
repo = 'vim-scripts/Vim-R-plugin'
on_ft = ['R']

[[plugins]]
repo = 'manabuishii/vim-cwl'
on_ft = ['cwl']
